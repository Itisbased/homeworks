package hw

/**
  * I. Здание и ADT
  *
  *   1. Отразить в ADT следующую предметную область:
  *      - Здание. У здания есть строковый адрес и этажи (ссылка на 1-й этаж)
  *      - Этаж бывает жилым, чердаком или коммерческим
  *      - У каждого жилого этажа есть 2 постояльца и лестница на следующий этаж
  *        (просто ссылка на этаж)
  *      - У каждого коммерческого этажа есть несколько заведений (минимум 1) и
  *        лестница на следующий этаж (да, в этом доме можно открыть свою
  *        кальянную на 5 этаже, даже если всего этажей 10 :kekw:)
  *      - У заведения есть название
  *      - Чердак может быть обычным, либо тоже коммерческим, но только с 1
  *        заведением.
  *      - У постояльца есть возраст и пол (м/ж).
  *
  *   2. Реализовать функцию fold аккумулирующую результат во время обхода здания.
  *      На каждом этаже аккумулируемое значение пересчитывается с помощью функции f,
  *      параметрами которой служат текущее значение аккумулятора и этаж. Первый
  *      параметр - это текущий аккумулятор. Второй \- текущий этаж. Здание
  *      необходимо обходить снизу вверх. Аккумулятор изначально равен accumulator
  *
  *   3. Реализовать остальные функции с помощью fold
  *
  *   4. Напишите тесты в Building.test.scala. На функцию fold отдельные тесты
  *      писать не обязательно
  */

type Resident // rewrite me
type Gender // rewrite me

type Building // rewrite me

object Building:
  type Business // rewrite me
  type Commercial // rewrite me
  type Floor // rewrite me
  type Attic // rewrite me
  type ResidentialFloor // rewrite me

  /** Проходится по зданию снизу в вверх, применяя функцию [[f]] на каждом этаже
    * с начальным аккумулятором [[accumulator]]
    */
  def fold[T](building: Building, accumulator: T)(f: (T, Floor) => T): T = ???

  /** Подсчитывает количество этажей, на которых живет хотя бы один мужчина
    * старше [[olderThan]]. Используйте [[fold]]
    */
  def countOldManFloors(building: Building, olderThan: Int): Int = ???

  /** Находит наибольший возраст женьщины, проживающей в здании. Используйте
    * [[fold]]
    */
  def womanMaxAge(building: Building): Option[Int] = ???

  /** Находит кол-во коммерческих заведений в здании. Используйте [[fold]] */
  def countCommercial(building: Building): Int = ???

  /** Находит среднее кол-во коммерческих заведений в зданиях. Используйте [[fold]] */
  def countCommercialAvg(building: List[Building]): Double = ???
